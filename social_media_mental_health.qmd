---
title: "The Effect of Social Media Reduction on Depression and Anxiety: A Meta-Analysis of RCTs"
editor: source


abstract: " This site contains the most up to date database on RCTs of effects of social media's effect on depression and anxiety.<br><br> **Contributors: Minnea Rutar and Sabrina Norwood.**<br>"
---

## Design of the studies

The studies included in this meta-analysis are RCTs which randomize participants into two (or more) arms. Typically in these studies, there are two arms: 1) a social media reduction intervention and 2) a control (i.e., using social media as usual). The period of the reduction will vary between studies (usually around 1-4). This meta-analysis extracts pre and post-test effects and any mid-intervention effects. Outcomes of interest are measures of depression (e.g., BDI) and/or anxiety (e.g., GAD).

## Search

Current search is just from the studies collected by in [this meta-analysis](https://psycnet.apa.org/record/2024-80192-001) by Christopher Ferguson. New studies or study data can be submitted to me at matthewbjane@gmail.com.


## Effect size calculation


Effect sizes are calculated using the method described in [a paper](https://journals.sagepub.com/doi/abs/10.1177/1094428106291059?casa_token=KhGJ14Quu6UAAAAA:0MlMLw5---MEtZyzC2CWkuZDkz9ZQbPPaQfJk2HiKxl03QGCxovi2oE7QnMPkoCu_gucadcRL3OBtw&casa_token=COAuI7Jj7FwAAAAA:sECB4k6SouyGyNZLbQHK3ciSIsUw-Ok-o4ryf4NtP9axyOuTNwnW2JHlELETAGu58fTC2e_0KbHB7Q) by Scott B. Morris on pre-post-control effects. Particularly, we want to take the reduction-control difference in the pre-post *change*. Each study will have a pre-test mean for the control group $\mu^C_0$ and the reduction group $\mu^R_0$ as well as a post-test mean: $\mu^C_1$ and $\mu^R_1$. Therefore the change between pre and post is $\mu_1 - \mu_0$. To account for different scales across studies, the we will standardize the difference in the mean change between reduction and control groups by the within-group pre-test standard deviation $\sigma_0$,

$$
\delta = \frac{(\mu^R_t - \mu^R_0) - (\mu^C_t - \mu^C_0)}{\sigma_0},
$$ {#eq-pop-smd}

and thus $\delta$ is our effect size of interest. This formulation of the standardized mean difference (SMD) has a lot of nice properties, most notably,

1. In RCTs pre-test standard deviations should be *in expectation* the same, and therefore the assumption of equal variance between arms should be met in most cases. Note here that we use complete cases (only subjects that underwent the intervention), so attrition effects could potentially violate this assumption (violations in this assumption probably have to be severe to make much of a difference).

2. Controlling for baseline. As I mentioned in the first point, attrition effects may cause differences in baseline means between groups even if it is an RCT. To hopefully account for some types of attrition effects, we subtract the baseline mean (i.e., pre-test mean) from the post-test mean within the reduction and control groups.


In each study sample, we have to extract and calculate sample estimates of the SMD. Our formula for a sample estimate of $\delta$ can be expressed as,

$$
d = \frac{(m^R_t - m^R_0) - (m^C_t - m^C_0)}{s_0} \times c(\nu),
$$ {#eq-sam-smd}
where $c(\nu) = \sqrt{2/\nu}\times\left(\Gamma[\nu/2]/\Gamma[(\nu-1)/2]\right)$ is Hedges' small sample correction factor and $\nu$ is $n_R+n_C -2$. Since we have two samples of the pre-test standard deviation, we have to obtain $s_0$ by pooling the reduction and control group's variances,

$$
s_0 = \sqrt{\frac{(n_R-1)\left(s^R_0\right)^2 + (n_C-1)\left(s^C_0\right)^2}{n_R + n_C - 2}}
$$

To obtain the precision of the of the estimate we can use 

## Handling Dependency

There are two sources of sample dependency in this analysis: multiple outcomes (i.e., anxiety/depression) and multiple time-points (e.g., week 1 and week 2). Two handle this problem we will use robust variance estimation to account for time dependency and 

## Data extraction of missing information

- When data can not be extracted from the primary article, the corresponding author is contacted. 
- When pre-test information is unavailable (e.g., they were never assessed at baseline) then we assume that the baseline scores are equal between groups ($\mu_0 = \mu^R_0 = \mu^C_0$) which reduces the numerator of @eq-pop-smd to be $(\mu^R_1 - \mu^R_0) - (\mu^C_1 - \mu^C_0) = \mu^R_1 - \mu_0 - \mu^C_1 + \mu_0 = \mu^R_1 - \mu^C_1$. The denominator will be the post-test standard deviation and therefore we will assume that the post-test standard deviation is equal to the pre-test standard deviation.
- When necessary statistical information isn't reported directly, alternative statistics are used to triangulate to the needed statistics (either via simulation or analytically).




## Analysis and Results


```{r,message=FALSE}

library(metafor)
library(brms)
library(tidyverse)
library(clubSandwich)
library(mgcv)
library(tidybayes)
library(modelr)
library(ggdist)

df <- read.csv("social_media_data.csv")

# assume .75 pre-post correlation
r <- .75

dat <- df %>%
  mutate(d = ((reduction_mean_post- reduction_mean_pre) - (control_mean_post - control_mean_pre)) / sqrt( ( (reduction_n - 1)*(reduction_mean_pre^2) + (control_n - 1)*(control_mean_pre^2) ) / (reduction_n + control_n - 2) ),
         v = 2*(1-( (reduction_n*r+control_n*r)/(reduction_n + control_n))) * ((reduction_n+control_n)/(reduction_n*control_n)) * (1 + (d^2 / (2*(1 - ((reduction_n*r+control_n*r)/(reduction_n+control_n))) * ((reduction_n+control_n)/(reduction_n*control_n))))) - d^2,
         sei = sqrt(v))

```



## Modeling Length of Intervention

The model below fits a regresses the SMD on length of the intervention (in weeks) using a Generalized Additive Model (GAM). Essentially, we model the observed effects $d_{i_e}$, where a non-linear function $f$ of $W_{i_e}$ (length of the intervention in weeks) captures the conditional mean of true effects $f(W_{i_e}) = \mathbb{E}[\delta_{i_e}\,|\,W_{i_e}]$. The estimated the model can be expressed as

$$
d_{i_e}\, |\, W_{i_e} \sim \mathcal{N}\left(f(W_{i_e}), \Sigma\right)
$$

The covariance matrix $\Sigma$ has non-zero off-diagonal elements when effects are from the same sample ($d_{i_1}...d_{i_q}$) which accounts for sample dependency. The assumption here is that within-sample effects are homogenous *after* conditioning on the length of the intervention ($W_{i_e}$). Important to note that this implies that depression and anxiety effects are homogenous within-studies, but we will differentiate these in the next section.

In R, we can use the `brms` [@brms] and `mgcv` [@mgcv] packages to fit a Bayesian meta-analytic GAM.  


```{r,results='hide', warning=FALSE, message=FALSE}

prior <- default_prior(d|se(sei,sigma = TRUE) ~ s(weeks, k=2) + (1|sample_id),
                        data = dat, family = gaussian())

prior$prior[[which(prior$class=="Intercept")]] <- "normal(0,1)"

mdl <- brm(d|se(sei,sigma = TRUE) ~ s(weeks, k = 2) + (1 | sample_id),
           data = dat,
           iter = 4000,
           prior = prior,
           sample_prior = "yes",
           file = "average_model",
           warmup = 200,
           control = list(max_treedepth = 15),
           cores = 2,
           file_refit = "on_change")

```

### Model Results

We can visualize the model results by plotting out the posterior draws over time. The vertical axis denotes the SMD where a positive value means more depression/anxiety in the reduction group (i.e., treatment is detrimental) whereas a negative value denotes a reduction in anxiety/depression in the reduction group (i.e., treatment is beneficial). The horizontal axis is the length of the intervention, or rather, the amount of time social media has been reduced for. 


```{r, fig.height= 5,dpi= 350, warning=FALSE, echo = FALSE}


# Extract conditional mean estimates for GAM
gam_conditional_means <- dat %>%
  data_grid(weeks = seq_range(weeks,expand = .1, n = 201), 
            sei = sei, sample_id = NA) %>%
  add_epred_draws(mdl, ndraws = 400, allow_new_levels=TRUE)

gam_predictions <- dat %>%
  data_grid(weeks = seq_range(weeks,expand = .1, n = 251), 
            sei = sei, sample_id = NA) %>%
  add_predicted_draws(mdl, ndraws = 400, allow_new_levels=TRUE)


ggplot() +
  stat_lineribbon(data = gam_predictions, 
            aes(x = weeks, y = .prediction, 
                fill_ramp = after_stat(.width)),
            fill = "grey95",alpha = .9) +
  geom_line(data = gam_conditional_means, 
            aes(x = weeks, y = .epred, group = .draw),
            color = "purple3", alpha = .1) +
  geom_point(data = dat, aes(x = weeks, y = d, size = 1/sei^2), 
             alpha = .8, color = "purple4") +
  theme_ggdist(base_size = 16) + 
  scale_size(range= c(2,10)) +
  geom_hline(dntercept = 0, linetype= "dashed", color = "black",alpha=.4) +
  theme(legend.position = "none",
        aspect.ratio = .8) +
  geom_hline(yintercept = 0, linetype = "dashed", alpha = .4, color = "black") +
  ylim(-.5,.5) +
  ylab("Stand. Mean Difference (d)") +
  xlab("Weeks") + 
  ggtitle("Effect size over intervention length") 
  


```

We see a very subtle trend toward zero after an initial benefit at 1-2 weeks. Let us look at the average effect size estimates at each week (weeks 1,2,3,4).


```{r, echo = FALSE,warning=FALSE}


# Extract conditional mean estimates for GAM
gam_conditional_means <- dat %>%
  data_grid(weeks = c(1,2,3,4), 
            sei = sei, sample_id = NA) %>%
  add_epred_draws(mdl, ndraws = 3000, allow_new_levels=TRUE)

means_d <- round(summarize(.data = as_tibble(gam_conditional_means), 
                     mean_d = mean(.epred), 
                     .by = weeks),2)

ggplot(data = gam_conditional_means, 
       aes(x = .epred, y = factor(weeks))) +
  stat_slabinterval(fill = "purple2", 
                    slab_alpha = .5,
                    scale = .7) +
  theme_ggdist(base_size=16) +
  geom_vline(xintercept = 0, 
             linetype = "dashed", 
             alpha = .4, 
             color = "black") +
  annotate(geom = "text", 
           x = means_d$mean_d, 
           y = means_d$weeks-.2,
           label = format(means_d$mean_d, nsmall = 2)) +
  xlim(-.5,.5) +
  labs(x = "Stand. Mean Difference (d)",
       y = "Length of Intervention (in weeks)")
  
  

```

There seems to not be good evidence that withdrawal effects are present (week 1 does not show substantially lower effects than other weeks) or that there is any substantial increase in the effect at a given week. Week 4 appears to have the lowest average effect at $\bar{\delta}$ = `r means_d$mean_d[means_d$weeks == 4]`.


### Diagnostics

The posterior predictive check is just *okay*, it seems that the model predicts a little more variability in the effect sizes than what is observed. This *may* mean that the pre/post correlations are under-estimated thus making the variability.

```{r}

pp_check(mdl,ndraws=50)

```


## Anxiety vs Depression

We can make a slightly more complex model that looks at the interaction of the temporal trend and the construct (anxiety and depression). When running the interaction model with the following formulation, the model did not converge (R hat value was >2.8 for all the interaction terms) and is likely far too complex to model with this small of a data set. Instead I just included the main effect of construct without the product term and the model thankfully converged. The model of the multiple regression with the main effects for `s(weeks)` and `construct` is shown below.

```{r,results='hide',warning=FALSE,message=FALSE}

prior <- default_prior(d|se(sei,sigma = TRUE) ~ s(weeks, k=2) + construct + (1|sample_id),
                        data = dat, family = gaussian())

prior$prior[[which(prior$class=="Intercept")]] <- "normal(0,1)"

mdl_construct <- brm(d|se(sei,sigma = TRUE) ~ s(weeks, k=2) + construct + (1 | sample_id),
           data = dat,
           iter = 4000,
           prior = prior,
           sample_prior = "yes",
           warmup = 200,
           file = "construct_model",
           control = list(max_treedepth = 15),
           cores = 2,
           file_refit = "on_change")


```















```{r, fig.height= 7,dpi= 350, warning=FALSE, echo = FALSE}


# Extract conditional mean estimates for GAM
gam_conditional_means <- dat %>%
  data_grid(weeks = seq_range(weeks, n = 401, expand = .1), 
            sei = sei, sample_id = NA,
            construct = c("anxiety", "depression")) %>%
  add_epred_draws(mdl_construct, ndraws = 500, allow_new_levels=TRUE)

p1 <- ggplot() +
  geom_line(data = gam_conditional_means %>% 
              filter(construct == "anxiety"), 
            aes(x = weeks, 
                y = .epred, 
                group = .draw), 
            alpha = .05,
            color = "red") +
  geom_point(data = dat %>% filter(construct == "anxiety"), 
             aes(x = weeks, y = d, size = 1/sei^2, color = construct),
             alpha = .8,
             color = "red") +
  theme_ggdist(base_size = 14) + 
  scale_size(range= c(2,10)) +
  geom_hline(dntercept = 0, linetype= "dashed", color = "black",alpha=.4) +
  theme(legend.position = "none",
        aspect.ratio = .8) +
  geom_hline(yintercept = 0, linetype = "dashed", alpha = .4, color = "black") +
  ylim(-.5,.5) +
  ylab("Stand. Mean Difference (d)") +
  xlab("Weeks") + 
  ggtitle("Anxiety") 
  



p2 <- ggplot() +
  geom_line(data = gam_conditional_means %>% 
              filter(construct == "depression"), 
            aes(x = weeks, 
                y = .epred, 
                group = .draw), 
            alpha = .05,
            color = "blue") +
  geom_point(data = dat %>% filter(construct == "depression"), 
             aes(x = weeks, y = d, size = 1/sei^2, color = construct),
             alpha = .8,
             color = "blue") +
  theme_ggdist(base_size = 16) + 
  scale_size(range= c(2,10)) +
  geom_hline(dntercept = 0, linetype= "dashed", color = "black",alpha=.4) +
  theme(legend.position = "none",
        aspect.ratio = .7) +
  geom_hline(yintercept = 0, linetype = "dashed", alpha = .4, color = "black") +
  ylim(-.5,.5) +  
  ylab("Stand. Mean Difference (d)") +
  xlab("Weeks") + 
  ggtitle("Depression") 
  
cowplot::plot_grid(p1,p2,ncol = 1)

```


We can see we see very similar trends for both the depression and anxiety plots. Similar to the overall mental health model, here we will plot out the week by week estimates of the average effect separated by anxiety (in red) and depression (in blue).





```{r,fig.height = 7, echo = FALSE,warning=FALSE}

# Extract conditional mean estimates for GAM
gam_conditional_means <- dat %>%
  data_grid(weeks = c(1,2,3,4), 
            sei = sei, 
            sample_id = NA,
            construct = c("anxiety","depression")) %>%
  add_epred_draws(mdl_construct, ndraws = 5000, allow_new_levels=TRUE)



means_d_depression <- round(
  summarize(.data = as_tibble(gam_conditional_means) %>%
              filter(construct == "depression"), 
                     mean_d = mean(.epred), 
                     .by = weeks),2)

means_d_anxiety <- round(
  summarize(.data = as_tibble(gam_conditional_means) %>%
              filter(construct == "anxiety"), 
                     mean_d = mean(.epred), 
                     .by = weeks),2)


ggplot(data = gam_conditional_means, 
       aes(x = .epred, y = factor(weeks), group = construct)) +
  stat_slabinterval(aes(fill_ramp = construct), 
                    fill = "blue",
                    slab_alpha = .5,
            scale = .4,
            position = position_dodge(width = .7, preserve = "total")) +
  scale_fill_ramp_discrete(from = "red") +
  theme_ggdist(base_size=18) +
  geom_vline(xintercept = 0, linetype = "dashed", alpha = .4, color = "black") +
  theme(aspect.ratio = 1.5) +
  xlim(-.5,.5) +
  annotate(geom = "text", 
           x = means_d_depression$mean_d, 
           y = means_d_depression$weeks+.08,
           label = format(means_d_depression$mean_d, nsmall = 2),
           color = "blue2") +
  annotate(geom = "text", 
           x = means_d_anxiety$mean_d, 
           y = means_d_anxiety$weeks-.27,
           label = format(means_d_anxiety$mean_d, nsmall = 2),
           color = "red2") +
  labs(x = "Stand. Mean Difference (d)",
       y = "Length of Intervention (in weeks)")
  
  

```




Anyways, those are the results for now, the data and code are all publicly available in my [MatthewBJane.github.io](https://github.com/MatthewBJane/MatthewBJane.github.io) repository.

## Session Info

```{r}
sessionInfo()
```


## Citing R packages

The following packages were used in this post:

-   `brms` [@brms]
-   `mgcv` [@splines]
-   `tidyverse` [@tidyverse]
-   `ggdist` [@ggdist]
-   `modelr` [@modelr]
-   `tidybayes` [@tidybayes]
